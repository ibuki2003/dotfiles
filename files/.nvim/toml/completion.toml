[[plugins]]
repo = 'vim-denops/denops.vim'

[[plugins]]
repo = 'Shougo/ddc.vim'
hook_post_source = '''
call ddc#custom#patch_global('sources', [
\  'nvim-lsp',
\  'around',
\  'file',
\ ])
"\  'neosnippet',

call ddc#custom#patch_global('sourceOptions', {
\ '_': {
\   'matchers': ['matcher_fuzzy'],
\   'minAutoCompleteLength': 1,
\ },
\ 'around': { 'mark' : 'A' },
\ 'nvim-lsp': { 'mark' : 'lsp', 'forceCompletionPattern': '\.\w*|:\w*|->\w*' },
\ 'neosnippet': { 'mark' : 'ns', 'matchers' : ['matcher_head'] },
\ 'file': {
\   'mark': 'F',
\   'isVolatile': v:true,
\   'forceCompletionPattern': '\S/\S*',
\ },
\})

" Use Customized labels
"vim.call('ddc#custom#patch_global', 'sourceParams', {
"})

"-- Use ddc.
call ddc#enable()
'''

[[plugins]]
repo = 'Shougo/ddc-around'

[[plugins]]
repo = 'Shougo/ddc-matcher_head'

[[plugins]]
repo = 'matsui54/ddc-matcher_fuzzy'

[[plugins]]
repo = 'LumaKernel/ddc-file'

[[plugins]]
repo = 'nvim-treesitter/nvim-treesitter'
hook_post_source = 'lua require("nvim-treesitter")'

[[plugins]]
repo = 'Shougo/ddc-nvim-lsp'

[[plugins]]
repo = 'neovim/nvim-lspconfig'
hook_add = '''
lua require('lspsettings/config')

nnoremap <silent> <leader>ld <cmd>lua peek('definition')<CR>
nnoremap <silent> <leader>lD <cmd>lua vim.lsp.buf.definition()<CR>
nnoremap <silent> <leader>lc <cmd>lua peek('declaration')<CR>
nnoremap <silent> <leader>lC <cmd>lua vim.lsp.buf.declaration()<CR>
nnoremap <silent> <leader>li <cmd>lua peek('implementation')<CR>
nnoremap <silent> <leader>lI <cmd>lua vim.lsp.buf.implementation()<CR>

nnoremap <silent> <leader>lr <cmd>lua vim.lsp.buf.rename()<CR>
nnoremap <silent> <leader>lR <cmd>lua vim.lsp.buf.references()<CR>
nnoremap <silent> <leader>la <cmd>lua vim.lsp.buf.code_action()<CR>

nnoremap <silent> <leader>lh <cmd>lua vim.lsp.buf.hover()<CR>
nnoremap <silent> <leader>ll <cmd>lua vim.lsp.buf.hover()<CR>
'''

[[plugins]]
repo = 'matsui54/denops-popup-preview.vim'
hook_post_source = '''
call popup_preview#enable()
'''

[[plugins]]
repo = 'ray-x/lsp_signature.nvim'
hook_post_source = '''
lua require'lsp_signature'.setup({bind=true, handler_opts={border="none"}, hint_enable=false})
hi! LspSignatureActiveParameter term=bold cterm=bold gui=bold
'''

[[plugins]]
repo = 'hrsh7th/vim-vsnip'
hook_add = '''
imap <expr> <C-l>   vsnip#available(1)  ? '<Plug>(vsnip-expand-or-jump)' : '<C-l>'
smap <expr> <C-l>   vsnip#available(1)  ? '<Plug>(vsnip-expand-or-jump)' : '<C-l>'
'''

[[plugins]]
repo = 'hrsh7th/vim-vsnip-integ'

[[plugins]]
repo = 'github/copilot.vim'
hook_add = '''
let g:copilot_no_tab_map = v:true
imap <silent><script><expr> <C-J> copilot#Accept("\<CR>")
'''

[[plugins]]
repo = 'rust-lang/rust.vim'
hook_add = '''
let g:rust_recommended_style = 0
'''
