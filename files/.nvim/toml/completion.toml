[[plugins]]
repo = 'ujihisa/neco-look'

[[plugins]]
repo = 'prabirshrestha/async.vim'

[[plugins]]
repo = 'prabirshrestha/asyncomplete.vim'

[[plugins]]
repo = 'prabirshrestha/asyncomplete-lsp.vim'


[[plugins]]
repo = 'prabirshrestha/vim-lsp'
hook_add = '''
nnoremap <F12> :LspDeclaration<CR>
nnoremap <S-F12> :LspReferences<CR>
nnoremap <F2> <plug>(lsp-rename)

let g:lsp_log_file = '/tmp/lsp.log'
let g:lsp_signs_error   = {'text': '!'}
let g:lsp_signs_warning = {'text': '*'}
let g:lsp_signs_hint    = {'text': '-'}
let g:lsp_async_completion = 1
let g:lsp_virtual_text_enabled = 1
let g:lsp_text_edit_enabled = 0

let g:lsp_diagnostics_enabled = 1
let g:lsp_diagnostics_echo_cursor = 1

"autocmd BufWritePre <buffer> LspDocumentFormatSync

runtime ../lsp_servers.vim
'''

[[plugins]]
repo = 'mattn/vim-lsp-settings'

[[plugins]]
repo = 'Shougo/neosnippet.vim'
hook_add = '''
let g:neosnippet#disable_runtime_snippets = {
\ '_' : 1,
\}
let g:neosnippet#snippets_directory = expand('~/.nvim/snippets')
imap <expr> <Tab> neosnippet#expandable_or_jumpable() ? "\<Plug>(neosnippet_expand_or_jump)" : "\<Tab>"
smap <expr> <Tab> neosnippet#expandable_or_jumpable() ? "\<Plug>(neosnippet_expand_or_jump)" : "\<Tab>"

'''

[[plugins]]
repo = 'thomasfaingnaert/vim-lsp-snippets'

[[plugins]]
repo = 'thomasfaingnaert/vim-lsp-neosnippet'

