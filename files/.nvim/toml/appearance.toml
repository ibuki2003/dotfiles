[[plugins]]
repo = 'tomasr/molokai'
hook_add = '''
function! s:fuwa_override_molokai()
    hi Comment ctermfg=102 guifg=#878787
    hi Visual ctermbg=240 guibg=#585858
    hi MatchParen cterm=bold ctermfg=208 ctermbg=233 gui=bold guifg=#FD971F guibg=#000000
    hi Pmenu ctermbg=237 ctermfg=4 guibg=#3a3a3a guifg=#00ffff
endfunction
autocmd ColorScheme molokai call s:fuwa_override_molokai()
'''

[[plugins]]
repo = 'dracula/vim'
hook_add = '''
colorscheme dracula

function! s:fuwa_override_dracula()
    hi! LineNr ctermbg=238 guibg=#424450
    hi CursorLineNr ctermbg=238 guibg=#424450 gui=NONE
    hi clear CursorLine
endfunction
autocmd ColorScheme dracula call s:fuwa_override_dracula()

'''

[[plugins]]
repo = 'ishan9299/nvim-solarized-lua'

[[plugins]]
repo = 'cocopon/iceberg.vim'
hook_add = '''
autocmd ColorScheme iceberg hi Visual ctermbg=237
autocmd ColorScheme iceberg hi NonText ctermfg=240
'''

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
let g:lightline = {}
let g:lightline.colorscheme = 'dracula'
let g:lightline.active = {
\ 'left': [
\   ['mode', 'paste'],
\   ['gitbranch', 'readonly', 'relativepath', 'modified'],
\   ['lsp_diagnostics'],
\ ],
\ 'right': [
\   ['lineinfo'],
\   ['percent'],
\   ['im_state', 'fileformat', 'fileencoding', 'filetype'],
\ ],
\}
let g:lightline.inactive = {
\ 'left':  [ ['filename', 'modified'] ],
\ 'right': [ ['lineinfo'] ],
\}
let g:lightline.component = {
\ 'lineinfo': '%3l:%-2v%<',
\}
let g:lightline.component_function = {
\ 'gitbranch': 'FugitiveHead',
\ 'lsp_diagnostics': 'LspDiagnosticsCount',
\ 'im_state': 'LLIMState',
\}

function! LspDiagnosticsCount()
    let counts = lsp#get_buffer_diagnostics_counts()
    let ret = []

    if counts.error
        call add(ret, 'E' . (counts.error))
    endif

    if counts.warning
        call add(ret, 'W' . (counts.warning))
    endif

    if counts.information
        call add(ret, 'I' . (counts.information))
    endif

    if counts.hint
        call add(ret, 'H' . (counts.hint))
    endif

    return join(ret, ' ')
endfunction

function! LLIMState()
    if exists('g:IMState') && g:IMState
        return 'JP'
    else
        return ''
    endif
endfunction
'''

[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'
hook_add = '''
let g:indent_guides_enable_on_vim_startup = 1
autocmd ColorScheme * hi IndentGuidesOdd  ctermbg=234
autocmd ColorScheme * hi IndentGuidesEven ctermbg=235
'''

[[plugins]]
repo = 'bronson/vim-trailing-whitespace'
