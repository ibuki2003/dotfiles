[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'vim-jp/vimdoc-ja'

[[plugins]]
repo = 'vim-denops/denops.vim'

[[plugins]]
repo = 'MunifTanjim/nui.nvim'

[[plugins]]
repo = 'sheerun/vim-polyglot'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'tpope/vim-commentary'

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'osyo-manga/vim-precious'
depends = ['context_filetype.vim']
hook_add = '''
" insert mode に入った時に 'filetype' を切り換える。
" カーソル移動時の自動切り替えを無効化
let g:precious_enable_switch_CursorMoved = {
\ '*' : 0,
\ 'help': 1
\}
let g:precious_enable_switch_CursorMoved_i = {
\ "*" : 0
\}

" insert に入った時にスイッチし、抜けた時に元に戻す
augroup fuwa_precious
  autocmd!
  autocmd InsertEnter * :PreciousSwitch
  " autocmd InsertLeave * :PreciousReset
augroup END
'''

[[plugins]]
repo = 'editorconfig/editorconfig-vim'

[[plugins]]
repo = 'tpope/vim-repeat'

[[plugins]]
repo = 'simeji/winresizer'
hook_add = '''
let g:winresizer_vert_resize = 1
let g:winresizer_horiz_resize = 1
'''

[[plugins]]
repo = 'wakatime/vim-wakatime'

[[plugins]]
repo = 'machakann/vim-highlightedyank'
hook_add = '''
let g:highlightedyank_highlight_duration = 300
'''

[[plugins]]
repo = 'kana/vim-operator-user'

[[plugins]]
repo = 'kana/vim-operator-replace'
hook_add = '''
map <Leader>r <Plug>(operator-replace)
'''

[[plugins]]
repo = 'mattn/emmet-vim'

[[plugins]]
repo = 'junegunn/vim-easy-align'
hook_add = '''
xmap ga <Plug>(EasyAlign)
nmap ga <Plug>(EasyAlign)

let g:easy_align_ignore_groups = ['String']
'''

[[plugins]]
repo = 'terryma/vim-expand-region'
hook_add = '''
vmap v <Plug>(expand_region_expand)
vmap <C-v> <Plug>(expand_region_shrink)
'''

[[plugins]]
repo = 'fuenor/im_control.vim'
hook_add = '''
if executable('fcitx-remote')
  let g:IM_CtrlMode = 6
elseif executable('fcitx5-remote')
  silent! function! IMCtrl(cmd)
    let cmd = a:cmd
    if cmd == 'On'
      call system('fcitx5-remote -o > /dev/null 2>&1 '.g:IM_CtrlAsync)
    elseif cmd == 'Off'
      call system('fcitx5-remote -c > /dev/null 2>&1 '.g:IM_CtrlAsync)
    elseif cmd == 'Toggle'
      call system('fcitx5-remote -t > /dev/null 2>&1 '.g:IM_CtrlAsync)
    endif
    return ''
  endfunction
  let g:IM_CtrlMode = 1
  let g:IM_vi_CooperativeMode = 1
  let g:IM_JpFixModeAutoToggle = 0
endif

inoremap <silent> <C-k> <C-r>=IMState('FixMode')<CR>
'''

[[plugins]]
repo = 'simplenote-vim/simplenote.vim'
if = 'exists("g:SimplenoteUsername")'
hook_add = '''
let g:SimplenoteFiletype = "markdown"
let g:SimplenoteVertical = 1
'''

[[plugins]]
repo = 'monaqa/dps-dial.vim'
hook_add = '''
let g:dps_dial#augends = [
  \'decimal',
  \'binary',
  \'hex',
  \'date-hyphen',
  \'date-slash',
  \'color',
  \{ 'kind': 'constant', 'opts': {
    \'elements': ['true', 'false'],
    \'cyclic': v:true,
    \'word': v:true,
  \}},
  \{ 'kind': 'constant', 'opts': {
    \'elements': ['True', 'False'],
    \'cyclic': v:true,
    \'word': v:true,
  \}},
\]
let g:dps_dial#augends#register#v = g:dps_dial#augends + [
  \'alpha', 'Alpha',
\]
function! s:dps_dial_overrides() abort
  let g:dps_dial#aliases.alpha.opts.cyclic = v:true
  let g:dps_dial#aliases.Alpha.opts.cyclic = v:true
endfunction
autocmd User DenopsPluginPost:dial call <SID>dps_dial_overrides()

nmap  <C-a>    <Plug>(dps-dial-increment)
nmap  <C-x>    <Plug>(dps-dial-decrement)
xmap  <C-a>  "v<Plug>(dps-dial-increment)gv
xmap  <C-x>  "v<Plug>(dps-dial-decrement)gv
xmap g<C-a> "vg<Plug>(dps-dial-increment)
xmap g<C-x> "vg<Plug>(dps-dial-decrement)
'''

[[plugins]]
repo = 'kana/vim-textobj-user'

[[plugins]]
repo = 'whatyouhide/vim-textobj-xmlattr'

[[plugins]]
repo = 'subnut/nvim-ghost.nvim'

[[plugins]]
repo = 'ctrlpvim/ctrlp.vim'
hook_add = '''
let g:ctrlp_working_path_mode = 'ra'
let g:ctrlp_cmd = 'CtrlP'
let g:ctrlp_extensions = ['mixed', 'allfile']
let g:ctrlp_types = ['mixed', 'allfile']

let g:ctrlp_user_command = {
\ 'types': {
\   1: ['.git',
\     executable('fd')
\       ? 'fd . %s -t f -HL -E \.git'
\       : 'cd %s && git ls-files -co --exclude-standard'
\   ],
\ },
\ 'fallback': executable('fd')
\   ? 'fd . %s -t f -HL -E \.git'
\   : 'find %s -type f -follow',
\}
'''

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'airblade/vim-gitgutter'

[[plugins]]
repo = 'RRethy/vim-hexokinase'
if = '&termguicolors'
build = 'make hexokinase'
hook_add = '''
let g:Hexokinase_highlighters = [ 'backgroundfull' ]
'''

[[plugins]]
repo = 'dhruvasagar/vim-table-mode'
hook_add = '''
let g:table_mode_corner = '|'
autocmd Filetype markdown,markdown_tablemode,mdx TableModeEnable
'''

[[plugins]]
repo = 'juro106/ftjpn'
hook_add = '''
let g:ftjpn_key_list = [
  \ ['.', '。', '．'],
  \ [',', '、', '，'],
  \ ['/', '・'],
  \ ['(', '（'],
  \ [')', '）'],
  \ ['{', '｛'],
  \ ['}', '｝'],
  \ ['[', '「', '『', '【', '〔'],
  \ [']', '」', '』', '】', '〕'],
  \ ['<', '〈', '《'],
  \ ['>', '〉', '》'],
  \ ['!', '！'],
  \ ['?', '？'],
\]
'''

[[plugins]]
repo = 'jasonccox/vim-wayland-clipboard'

[[plugins]]
repo = 'kyoh86/vim-ripgrep'
hook_add = '''
command! -nargs=* -complete=file Rg :call ripgrep#search('-. ' . <q-args>)
'''
